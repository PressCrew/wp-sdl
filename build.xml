<?xml version="1.0" encoding="UTF-8"?>

<project name="WP-SDL" default="dist">

	<!-- Properties -->
	<property name="composerpath" value="/usr/bin/composer.phar" />
	<resolvepath propertyName="phpunitpath" file="${phing.dir}/vendor/bin/phpunit" />
	<resolvepath propertyName="wpclipath" file="${phing.dir}/vendor/bin/wp" />
	<resolvepath propertyName="source.dir" file="${phing.dir}/src" />
	<resolvepath propertyName="source.tests" file="${phing.dir}/tests" />
	<resolvepath propertyName="build.dir" file="${phing.dir}/build" />
	<resolvepath propertyName="build.dist" file="${build.dir}/dist" />
	<resolvepath propertyName="build.env" file="${build.dir}/env" />

	<!-- Target: clean -->
	<target name="clean">
		<echo msg="Cleaning up..." />
		<delete dir="${build.dist}" quiet="true" />
	</target>

	<!-- Target: prepare -->
	<target name="prepare" depends="clean">
		<echo msg="Preparing build dir..." />
		<mkdir dir="${build.dist}" />
	</target>

	<!-- Target: prepare-test -->
	<target name="prepare-test" depends="prepare">

		<!-- Install dependencies -->
		<echo msg="Installing dependencies via composer..." />
		<composer composer="${composerpath}" command="install" />

		<!-- default WordPress properties -->
		<property name="wp.version" value="4.0" />
		<property name="wp.dbname" value="wp_sdl_unit_tests" />
		<property name="wp_dbuser" value="wordpress" />
		<property name="wp_dbpass" value="wordpress" />
		<property name="wp.dbhost" value="localhost" />
		<property name="wp.url" value="http://localhost/" />
		<property name="wp.title" value="WP-SDL Unit Testing" />
		<property name="wp.admin_user" value="admin" />
		<property name="wp.admin_password" value="admin" />
		<property name="wp.admin_email" value="root@127.0.0.1" />

		<!-- check if env exists -->
		<available file="${build.env}" type="dir" property="wp_is_installed" value="true" />

		<!-- WordPress testing env -->
		<echo msg="Checking if WordPress environment is installed..." />
		<if>
			<isset property="wp_is_installed" />
			<then>
				<echo msg="WordPress test env is installed in: ${build.env}" />
				<echo msg="Dropping existing WordPress database..." />
				<exec command="${wpclipath} db drop --path=${build.env} --yes" checkreturn="true" />
			</then>
			<else>
				<echo msg="Downloading WordPress test env to: ${build.env}" />
				<exec command="${wpclipath} core download --path=${build.env} --version=${wp.version}" checkreturn="true" />
				<echo msg="Creating WordPress config..." />
				<echo msg="${wpclipath} core config --path=${build.env} --dbname=${wp.dbname} --dbuser=${wp_dbuser} --dbpass=${wp_dbpass} --dbhost=${wp.dbhost}" />
				<exec command="${wpclipath} core config --path=${build.env} --dbname=${wp.dbname} --dbuser=${wp_dbuser} --dbpass=${wp_dbpass} --dbhost=${wp.dbhost}" outputProperty="debugging" />
				<echo msg="Debug: ${debugging}" />
			</else>
		</if>
		<echo msg="Creating WordPress database..." />
		<exec command="${wpclipath} db create --path=${build.env}" checkreturn="true" />
		<echo msg="Installing WordPress tables..." />
		<exec command="${wpclipath} core install --path=${build.env} --url='${wp.url}' --title='${wp.title}' --admin_user='${wp.admin_user}' --admin_password='${wp.admin_password}' --admin_email='${wp.admin_email}'" checkreturn="true" />
	</target>

	<!-- Target: test -->
	<target name="test" depends="prepare-test">
		<php expression="require_once('vendor/autoload.php');" />
		<phpunit
			pharlocation="${phpunitpath}"
			configuration="${build.dir}/phpunit.xml"
			haltonerror="true"
			haltonfailure="true"
			printsummary="true"
		>
			<formatter type="plain" usefile="false" />
			<batchtest>
				<fileset dir="${source.tests}">
					<include name="**/*_test.php"/>
				</fileset>
			</batchtest>
		</phpunit>
	</target>

	<!-- Target: build -->
	<target name="build" depends="prepare">
		<echo msg="Building..." />
	</target>
	
	<!-- Target: dist (default) -->
	<target name="dist" depends="build">
		<echo msg="Creating zip archive..." />
		<zip destfile="${build.dist}/wp-sdl.zip" prefix="wp-sdl/">
			<fileset dir="${source.dir}">
				<include name="**" />
			</fileset>
		</zip>
		<echo msg="Files copied and compressed!" />
	</target>
</project>