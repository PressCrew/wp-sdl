<?xml version="1.0" encoding="UTF-8"?>

<project name="WP-SDL" default="dist">

	<!-- Properties -->
	<property name="composerpath" value="/usr/bin/composer.phar" />
	<property name="phpunitpath" value="${basedir}/vendor/bin/phpunit" />
	<property name="wpclipath" value="${basedir}/vendor/bin/wp" />
	<property name="source.dir" value="${basedir}/src" />
	<property name="source.tests" value="${basedir}/tests" />
	<property name="build.dir" value="${basedir}/build" />
	<property name="build.dist" value="${build.dir}/dist" />
	<property name="build.env" value="${build.dir}/env" />

	<!-- default WordPress properties -->
	<property name="wp.version" value="4.3.1" />
	<property name="wp.dbname" value="wp_sdl_unit_tests" />
	<property name="wp.dbuser" value="wordpress" />
	<property name="wp.dbpass" value="wordpress" />
	<property name="wp.dbhost" value="127.0.0.1" />
	<property name="wp.url" value="http://localhost/" />
	<property name="wp.title" value="WP-SDL Unit Testing" />
	<property name="wp.admin_user" value="admin" />
	<property name="wp.admin_password" value="admin" />
	<property name="wp.admin_email" value="root@127.0.0.1" />

	<!-- check if env exists -->
	<available file="${build.env}" type="dir" property="wp_is_installed" value="true" />

	<!-- Target: clean -->
	<target name="clean">
		<echo message="Cleaning up..." />
		<delete dir="${build.dist}" quiet="true" />
	</target>

	<!-- Target: prepare -->
	<target name="prepare" depends="clean">
		<!-- Install dependencies -->
		<echo message="Installing dependencies via composer..." />
		<exec executable="${composerpath}" spawn="true">
			<arg value="install"/>
		</exec>
		<echo message="Preparing build dir..." />
		<mkdir dir="${build.dist}" />
	</target>

	<!-- Target: prepare-wp -->
	<target name="prepare-wp" depends="prepare" unless="wp_is_installed">
		<echo message="Downloading WordPress test env to: ${build.env}" />
		<exec executable="${wpclipath}" failonerror="true">
			<arg value="core"/>
			<arg value="download"/>
			<arg value="--path=${build.env}"/>
			<arg value="--version=${wp.version}"/>
		</exec>
		<echo message="Creating WordPress config..." />
		<exec executable="${wpclipath}" failonerror="true">
			<arg value="core"/>
			<arg value="config"/>
			<arg value="--path=${build.env}"/>
			<arg value="--dbname=${wp.dbname}"/>
			<arg value="--dbuser=${wp.dbuser}"/>
			<arg value="--dbpass=${wp.dbpass}"/>
			<arg value="--dbhost=${wp.dbhost}"/>
		</exec>
	</target>

	<!-- Target: prepare-wp-reset -->
	<target name="prepare-wp-reset" depends="prepare-wp" if="wp_is_installed">
		<echo message="WordPress test env is installed in: ${build.env}" />
		<echo message="Dropping existing WordPress database..." />
		<exec executable="${wpclipath}" failonerror="true">
			<arg value="db"/>
			<arg value="drop"/>
			<arg value="--path=${build.env}"/>
			<arg value="--yes"/>
		</exec>
	</target>

	<!-- Target: prepare-test -->
	<target name="prepare-test" depends="prepare-wp-reset">
		<echo message="Creating WordPress database..." />
		<exec executable="${wpclipath}" failonerror="true">
			<arg value="db"/>
			<arg value="create"/>
			<arg value="--path=${build.env}"/>
		</exec>
		<echo message="Installing WordPress tables..." />
		<exec executable="${wpclipath}" failonerror="true">
			<arg value="core"/>
			<arg value="install"/>
			<arg value="--path=${build.env}"/>
			<arg value="--url=${wp.url}"/>
			<arg value="--title=${wp.title}"/>
			<arg value="--admin_user=${wp.admin_user}"/>
			<arg value="--admin_password=${wp.admin_password}"/>
			<arg value="--admin_email=${wp.admin_email}"/>
		</exec>
	</target>

	<!-- Target: test -->
	<target name="test" depends="prepare-test">
		<exec executable="${phpunitpath}" failonerror="true">
			<arg value="--configuration=${basedir}/phpunit.xml"/>
		</exec>
	</target>

	<!-- Target: build -->
	<target name="build" depends="prepare">
		<echo message="Building..." />
	</target>
	
	<!-- Target: dist (default) -->
	<target name="dist" depends="build">
		<echo message="Creating zip archive..." />
		<zip destfile="${build.dist}/wp-sdl.zip" prefix="wp-sdl/">
			<fileset dir="${source.dir}">
				<include name="**" />
			</fileset>
		</zip>
		<echo message="Files copied and compressed!" />
	</target>
</project>